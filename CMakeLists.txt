cmake_minimum_required(VERSION 3.10)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

cmake_policy(SET CMP0148 OLD)

project(pyforefire VERSION 1.0)

if(NOT DEFINED FOREFIRE_LIB OR NOT DEFINED FOREFIRE_SRC_DIR OR NOT DEFINED NETCDF_INCLUDE_DIR OR NOT DEFINED NETCDFCXX_INCLUDE_DIR)
    message(FATAL_ERROR "FOREFIRE_LIB, FOREFIRE_SRC_DIR, NETCDF_INCLUDE_DIR and NETCDFCXX_INCLUDE_DIR must be specified.")
endif()

execute_process(COMMAND python3-config --extension-suffix OUTPUT_VARIABLE PROJECT_SUFFIX)
string(REPLACE "\n" "" PROJECT_SUFFIX ${PROJECT_SUFFIX})

include_directories(
    ${NETCDF_INCLUDE_DIR}
    ${NETCDFCXX_INCLUDE_DIR}
)

include_directories(
    ${FOREFIRE_SRC_DIR}
    ${FOREFIRE_SRC_DIR}/include
    ${CMAKE_SOURCE_DIR}/src/include
)

execute_process(COMMAND python3 -m pybind11 --includes OUTPUT_VARIABLE PYBIND11_INCLUDE)
string(REPLACE "-I" "" PYBIND11_INCLUDE ${PYBIND11_INCLUDE})
string(REPLACE "\n" "" PYBIND11_INCLUDE ${PYBIND11_INCLUDE})
string(REPLACE " " ";" PYBIND11_INCLUDE ${PYBIND11_INCLUDE})
include_directories(${PYBIND11_INCLUDE})

find_package(pybind11 REQUIRED)

set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS "${CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS} -undefined dynamic_lookup")

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)

file(GLOB_RECURSE SRC_FILES src/pylibforefire/*.cpp)

add_library(${PROJECT_NAME} SHARED ${SRC_FILES})

set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
set_target_properties(${PROJECT_NAME} PROPERTIES SUFFIX ${PROJECT_SUFFIX})

target_link_libraries(${PROJECT_NAME} PRIVATE ${FOREFIRE_LIB})

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)